"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
require("rxjs/add/operator/map");
require("rxjs/add/operator/do");
var CSGOHttpGetService = (function () {
    function CSGOHttpGetService(http) {
        this.http = http;
        this._apiKey = '6B7AF279CBF33E0D7AE254E9236FCF99';
        this._apiKey2 = '9B2266D26FF1EEA14F77DFA355BF8FFB';
        this._appid = '730';
        this._serverUrl = "http://api.steampowered.com";
    }
    CSGOHttpGetService.prototype.getDataByUser = function (idUser) {
        idUser = "76561198224522144";
        var endPoint = '/ISteamUserStats/GetUserStatsForGame/v0002';
        return this.http.get("" + this._serverUrl + endPoint + "/?appid=" + this._appid + "&key=" + this._apiKey + "&steamid=" + idUser).map(function (res) { return res.json().playerstats.stats; });
    };
    CSGOHttpGetService.prototype.getUserStatus = function (idUser) {
        // https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key=9B2266D26FF1EEA14F77DFA355BF8FFB&steamids=76561198224522144
        idUser = "76561198224522144";
        var endPoint = '/ISteamUser/GetPlayerSummaries/v2';
        //const url = "https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key=9B2266D26FF1EEA14F77DFA355BF8FFB&steamids=76561198224522144"
        return this.http.get("" + this._serverUrl + endPoint + "/?key=" + this._apiKey2 + "&steamids=" + idUser).map(function (res) { return res.json().response.players; });
    };
    CSGOHttpGetService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.Http])
    ], CSGOHttpGetService);
    return CSGOHttpGetService;
}());
exports.CSGOHttpGetService = CSGOHttpGetService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Nnby1odHRwLXNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjc2dvLWh0dHAtc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUEyQztBQUMzQyxzQ0FBd0Q7QUFHeEQsaUNBQStCO0FBQy9CLGdDQUE4QjtBQUc5QjtJQUtJLDRCQUFvQixJQUFVO1FBQVYsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUp0QixZQUFPLEdBQUcsa0NBQWtDLENBQUM7UUFDN0MsYUFBUSxHQUFHLGtDQUFrQyxDQUFDO1FBQzlDLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZixlQUFVLEdBQUcsNkJBQTZCLENBQUM7SUFDakIsQ0FBQztJQUVuQywwQ0FBYSxHQUFiLFVBQWMsTUFBTTtRQUNoQixNQUFNLEdBQUcsbUJBQW1CLENBQUM7UUFDN0IsSUFBTSxRQUFRLEdBQUcsNENBQTRDLENBQUM7UUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUcsSUFBSSxDQUFDLFVBQVUsR0FBRyxRQUFRLGdCQUFXLElBQUksQ0FBQyxNQUFNLGFBQVEsSUFBSSxDQUFDLE9BQU8saUJBQVksTUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQTVCLENBQTRCLENBQUMsQ0FBQztJQUMvSixDQUFDO0lBQ0QsMENBQWEsR0FBYixVQUFjLE1BQU07UUFDaEIsaUlBQWlJO1FBQ2pJLE1BQU0sR0FBRyxtQkFBbUIsQ0FBQztRQUM3QixJQUFNLFFBQVEsR0FBRyxtQ0FBbUMsQ0FBQztRQUNyRCw4SUFBOEk7UUFDOUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUcsSUFBSSxDQUFDLFVBQVUsR0FBRyxRQUFRLGNBQVMsSUFBSSxDQUFDLFFBQVEsa0JBQWEsTUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQTNCLENBQTJCLENBQUMsQ0FBQztJQUMzSSxDQUFDO0lBbEJRLGtCQUFrQjtRQUQ5QixpQkFBVSxFQUFFO3lDQU1pQixXQUFJO09BTHJCLGtCQUFrQixDQW9COUI7SUFBRCx5QkFBQztDQUFBLEFBcEJELElBb0JDO0FBcEJZLGdEQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBIdHRwLCBIZWFkZXJzLCBSZXNwb25zZSB9IGZyb20gXCJAYW5ndWxhci9odHRwXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgYXMgUnhPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anMvT2JzZXJ2YWJsZVwiO1xyXG5cclxuaW1wb3J0IFwicnhqcy9hZGQvb3BlcmF0b3IvbWFwXCI7XHJcbmltcG9ydCBcInJ4anMvYWRkL29wZXJhdG9yL2RvXCI7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBDU0dPSHR0cEdldFNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBfYXBpS2V5ID0gJzZCN0FGMjc5Q0JGMzNFMEQ3QUUyNTRFOTIzNkZDRjk5JztcclxuICAgIHByaXZhdGUgX2FwaUtleTIgPSAnOUIyMjY2RDI2RkYxRUVBMTRGNzdERkEzNTVCRjhGRkInO1xyXG4gICAgcHJpdmF0ZSBfYXBwaWQgPSAnNzMwJztcclxuICAgIHByaXZhdGUgX3NlcnZlclVybCA9IFwiaHR0cDovL2FwaS5zdGVhbXBvd2VyZWQuY29tXCI7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHApIHsgfVxyXG5cclxuICAgIGdldERhdGFCeVVzZXIoaWRVc2VyKSB7XHJcbiAgICAgICAgaWRVc2VyID0gXCI3NjU2MTE5ODIyNDUyMjE0NFwiO1xyXG4gICAgICAgIGNvbnN0IGVuZFBvaW50ID0gJy9JU3RlYW1Vc2VyU3RhdHMvR2V0VXNlclN0YXRzRm9yR2FtZS92MDAwMic7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoYCR7dGhpcy5fc2VydmVyVXJsfSR7ZW5kUG9pbnR9Lz9hcHBpZD0ke3RoaXMuX2FwcGlkfSZrZXk9JHt0aGlzLl9hcGlLZXl9JnN0ZWFtaWQ9JHtpZFVzZXJ9YCkubWFwKHJlcyA9PiByZXMuanNvbigpLnBsYXllcnN0YXRzLnN0YXRzKTtcclxuICAgIH1cclxuICAgIGdldFVzZXJTdGF0dXMoaWRVc2VyKSB7XHJcbiAgICAgICAgLy8gaHR0cHM6Ly9hcGkuc3RlYW1wb3dlcmVkLmNvbS9JU3RlYW1Vc2VyL0dldFBsYXllclN1bW1hcmllcy92Mi8/a2V5PTlCMjI2NkQyNkZGMUVFQTE0Rjc3REZBMzU1QkY4RkZCJnN0ZWFtaWRzPTc2NTYxMTk4MjI0NTIyMTQ0XHJcbiAgICAgICAgaWRVc2VyID0gXCI3NjU2MTE5ODIyNDUyMjE0NFwiO1xyXG4gICAgICAgIGNvbnN0IGVuZFBvaW50ID0gJy9JU3RlYW1Vc2VyL0dldFBsYXllclN1bW1hcmllcy92Mic7XHJcbiAgICAgICAgLy9jb25zdCB1cmwgPSBcImh0dHBzOi8vYXBpLnN0ZWFtcG93ZXJlZC5jb20vSVN0ZWFtVXNlci9HZXRQbGF5ZXJTdW1tYXJpZXMvdjIvP2tleT05QjIyNjZEMjZGRjFFRUExNEY3N0RGQTM1NUJGOEZGQiZzdGVhbWlkcz03NjU2MTE5ODIyNDUyMjE0NFwiXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoYCR7dGhpcy5fc2VydmVyVXJsfSR7ZW5kUG9pbnR9Lz9rZXk9JHt0aGlzLl9hcGlLZXkyfSZzdGVhbWlkcz0ke2lkVXNlcn1gKS5tYXAocmVzID0+IHJlcy5qc29uKCkucmVzcG9uc2UucGxheWVycyk7XHJcbiAgICB9XHJcblxyXG59Il19