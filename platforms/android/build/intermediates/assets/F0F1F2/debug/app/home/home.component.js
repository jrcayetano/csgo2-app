"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var csgo_http_service_1 = require("../services/csgo-http-service");
var HomeComponent = (function () {
    // This pattern makes use of Angular’s dependency injection implementation to inject an instance of the ItemService service into this class. 
    // Angular knows about this service because it is included in your app’s main NgModule, defined in app.module.ts.
    function HomeComponent(csgoSrv) {
        this.csgoSrv = csgoSrv;
    }
    HomeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.csgoSrv.getDataByUser('id').subscribe(function (dataUser) {
            _this.datos = dataUser;
            // console.dir(this.datos);
        }, function (error) {
            console.log(error);
        });
        this.statistics = [
            { type: "Poison", count: 59 }, { type: "Grass", count: 84 }, { type: "Fire", count: 56 },
            { type: "Flying", count: 90 }, { type: "Water", count: 118 }, { type: "Bug", count: 66 },
            { type: "Normal", count: 97 }, { type: "Electric", count: 42 }, { type: "Ground", count: 60 },
            { type: "Fairy", count: 35 }, { type: "Fighting", count: 44 }, { type: "Psychic", count: 74 },
            { type: "Rock", count: 55 }, { type: "Steel", count: 41 }, { type: "Ice", count: 33 },
            { type: "Ghost", count: 35 }, { type: "Dragon", count: 38 }, { type: "Dark", count: 44 }
        ];
    };
    HomeComponent = __decorate([
        core_1.Component({
            selector: "ns-home",
            moduleId: module.id,
            templateUrl: "./home.component.html",
        }),
        __metadata("design:paramtypes", [csgo_http_service_1.CSGOHttpGetService])
    ], HomeComponent);
    return HomeComponent;
}());
exports.HomeComponent = HomeComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9tZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJob21lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHNDQUFrRDtBQUNsRCxtRUFBbUU7QUFPbkU7SUFHSSw2SUFBNkk7SUFDN0ksaUhBQWlIO0lBQ2pILHVCQUFvQixPQUEwQjtRQUExQixZQUFPLEdBQVAsT0FBTyxDQUFtQjtJQUFJLENBQUM7SUFFbkQsZ0NBQVEsR0FBUjtRQUFBLGlCQWVDO1FBZEcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQUEsUUFBUTtZQUMvQyxLQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQztZQUN2QiwyQkFBMkI7UUFDOUIsQ0FBQyxFQUFFLFVBQUEsS0FBSztZQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUE7UUFDRixJQUFJLENBQUMsVUFBVSxHQUFHO1lBQ2QsRUFBRSxJQUFJLEVBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBQyxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQ3JGLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRTtZQUN0RixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7WUFDN0YsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQzVGLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRTtZQUNwRixFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7U0FDekYsQ0FBQTtJQUNMLENBQUM7SUF0QlEsYUFBYTtRQUx6QixnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLFNBQVM7WUFDbkIsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQ25CLFdBQVcsRUFBRSx1QkFBdUI7U0FDdkMsQ0FBQzt5Q0FNOEIsc0NBQWtCO09BTHJDLGFBQWEsQ0F1QnpCO0lBQUQsb0JBQUM7Q0FBQSxBQXZCRCxJQXVCQztBQXZCWSxzQ0FBYSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IENTR09IdHRwR2V0U2VydmljZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9jc2dvLWh0dHAtc2VydmljZVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJucy1ob21lXCIsXHJcbiAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9ob21lLmNvbXBvbmVudC5odG1sXCIsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBIb21lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIHN0YXRpc3RpY3M7XHJcbiAgICBkYXRvcztcclxuICAgIC8vIFRoaXMgcGF0dGVybiBtYWtlcyB1c2Ugb2YgQW5ndWxhcuKAmXMgZGVwZW5kZW5jeSBpbmplY3Rpb24gaW1wbGVtZW50YXRpb24gdG8gaW5qZWN0IGFuIGluc3RhbmNlIG9mIHRoZSBJdGVtU2VydmljZSBzZXJ2aWNlIGludG8gdGhpcyBjbGFzcy4gXHJcbiAgICAvLyBBbmd1bGFyIGtub3dzIGFib3V0IHRoaXMgc2VydmljZSBiZWNhdXNlIGl0IGlzIGluY2x1ZGVkIGluIHlvdXIgYXBw4oCZcyBtYWluIE5nTW9kdWxlLCBkZWZpbmVkIGluIGFwcC5tb2R1bGUudHMuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNzZ29TcnY6Q1NHT0h0dHBHZXRTZXJ2aWNlKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmNzZ29TcnYuZ2V0RGF0YUJ5VXNlcignaWQnKS5zdWJzY3JpYmUoZGF0YVVzZXIgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmRhdG9zID0gZGF0YVVzZXI7XHJcbiAgICAgICAgICAgLy8gY29uc29sZS5kaXIodGhpcy5kYXRvcyk7XHJcbiAgICAgICAgfSwgZXJyb3IgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgfSlcclxuICAgICAgICB0aGlzLnN0YXRpc3RpY3MgPSBbXHJcbiAgICAgICAgICAgIHsgdHlwZTpcIlBvaXNvblwiLCBjb3VudDogNTkgfSwgeyB0eXBlOlwiR3Jhc3NcIiwgY291bnQ6IDg0IH0sIHsgdHlwZTogXCJGaXJlXCIsY291bnQ6IDU2IH0sXHJcbiAgICAgICAgICAgIHsgdHlwZTogXCJGbHlpbmdcIiwgY291bnQ6IDkwIH0sIHsgdHlwZTpcIldhdGVyXCIsIGNvdW50OiAxMTggfSx7IHR5cGU6IFwiQnVnXCIsIGNvdW50OiA2NiB9LFxyXG4gICAgICAgICAgICB7IHR5cGU6IFwiTm9ybWFsXCIsIGNvdW50OiA5NyB9LCB7IHR5cGU6IFwiRWxlY3RyaWNcIiwgY291bnQ6IDQyIH0sIHsgdHlwZTogXCJHcm91bmRcIiwgY291bnQ6IDYwIH0sXHJcbiAgICAgICAgICAgIHsgdHlwZTogXCJGYWlyeVwiLCBjb3VudDogMzUgfSwgeyB0eXBlOlwiRmlnaHRpbmdcIiwgY291bnQ6IDQ0IH0sIHsgdHlwZTogXCJQc3ljaGljXCIsIGNvdW50OiA3NCB9LFxyXG4gICAgICAgICAgICB7IHR5cGU6IFwiUm9ja1wiLCBjb3VudDogNTUgfSwgeyB0eXBlOlwiU3RlZWxcIiwgY291bnQ6IDQxIH0sIHsgdHlwZTogXCJJY2VcIiwgY291bnQ6IDMzIH0sXHJcbiAgICAgICAgICAgIHsgdHlwZTogXCJHaG9zdFwiLCBjb3VudDogMzUgfSwgeyB0eXBlOiBcIkRyYWdvblwiLCBjb3VudDogMzh9LCB7IHR5cGU6XCJEYXJrXCIsIGNvdW50OiA0NCB9XHJcbiAgICAgICAgXVxyXG4gICAgfVxyXG59Il19